#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|T|) |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|NEW-CHUNK-TYPE-SIZE|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FTYPE|
   (|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|T|) |COMMON-LISP|::|T|)
   |COMMON-LISP-USER|::|GET-MODULE-FCT|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|GET-CHUNK-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CHUNK-TYPE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "The user macro to define a new chunk-type."
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|NAME-AND-SLOTS|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE|
      `(|COMMON-LISP-USER|::|CHUNK-TYPE-FCT|
        ',|COMMON-LISP-USER|::|NAME-AND-SLOTS|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|NAME-AND-SLOTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|NAME-AND-SLOTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PRINT-ALL-CHUNK-TYPES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP-USER|::|*PPRINT-CHUNK-TYPE-STRING*|
 '(|COMMON-LISP|::|FORMATTER|
   "~S~@[ <- ~s~]~@[ ~S~]~%~{~{   ~s~@[ (~s)~]~%~}~}~%"))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PPRINT-CT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PPRINT-CHUNK-TYPE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PPRINT-CHUNK-TYPE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PPRINT-CHUNK-TYPE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-TYPE|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PPRINT-CHUNK-TYPE|
       `(|COMMON-LISP-USER|::|PPRINT-CHUNK-TYPE-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-TYPE|))))))
  '(|COMMON-LISP-USER|::|CHUNK-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|PPRINT-CHUNK-TYPE-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CHUNK-TYPE-P|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Predicate macro for verifying that a chunk-type of a given name exists"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-TYPE-NAME?|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE-P|
       `(|COMMON-LISP-USER|::|CHUNK-TYPE-P-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-TYPE-NAME?|))))))
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME?|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-P-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME?|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPE-P|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPE-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPE-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Predicate macro for testing that one chunk-type isa a subtype of another"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-SUBTYPE?|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|CHUNK-SUPERTYPE| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPE-P|
       `(|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPE-P-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-SUBTYPE?|
         ',|COMMON-LISP-USER|::|CHUNK-SUPERTYPE|))))))
  '(|COMMON-LISP-USER|::|CHUNK-SUBTYPE?|
    |COMMON-LISP-USER|::|CHUNK-SUPERTYPE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPE-P-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-SUBTYPE?|
    |COMMON-LISP-USER|::|CHUNK-SUPERTYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|CHUNK-TYPE-SUPERTYPES|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE-SUPERTYPES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE-SUPERTYPES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Macro to return the list of supertypes for a given chunk-type"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE-SUPERTYPES|
       `(|COMMON-LISP-USER|::|CHUNK-TYPE-SUPERTYPES-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-SUPERTYPES-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPES|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Macro to return the list of subtypes for a given chunk-type"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPES|
       `(|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPES-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-SUBTYPES-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-NAMES|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-NAMES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-NAMES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Macro to return the list of valid slot names for a given chunk-type"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-NAMES|
       `(|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-NAMES-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-NAMES-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CT-SLOT-NAMES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP-USER|::|CHUNK-TYPE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-DEFAULT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-DEFAULT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-DEFAULT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Macro to return the default value for a slot in a chunk-type"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|SLOT-NAME| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-DEFAULT|
       `(|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-DEFAULT-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|
         ',|COMMON-LISP-USER|::|SLOT-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-SLOT-DEFAULT-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CT-SLOT-DEFAULT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|CHUNK-TYPE-DOCUMENTATION|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CHUNK-TYPE-DOCUMENTATION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CHUNK-TYPE-DOCUMENTATION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Macro to return the documentation string for a chunk-type"
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CHUNK-TYPE-DOCUMENTATION|
       `(|COMMON-LISP-USER|::|CHUNK-TYPE-DOCUMENTATION-FCT|
         ',|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|))))))
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|CHUNK-TYPE-DOCUMENTATION-FCT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|VALID-SLOT-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|SLOT| |COMMON-LISP-USER|::|CHUNK-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|VALID-CHUNK-TYPE-SLOT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE-NAME| |COMMON-LISP-USER|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTEND-CHUNK-TYPE-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CHUNK-TYPE| |COMMON-LISP-USER|::|SLOT-NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|EXTENDED-SLOT-NAME-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|SLOT-NAME| |COMMON-LISP-USER|::|CHUNK-TYPE-NAME|)))
